# Generated by Django 4.2.20 on 2025-03-25 05:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('user', 'User'), ('validator', 'Validator')], default='user', max_length=20)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('observation', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='pam_user_groups', related_query_name='pam_user', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='pam_user_permissions', related_query_name='pam_user', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CloudAccountAccessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_level', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('validator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CloudAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=12)),
                ('provider', models.CharField(choices=[('aws', 'Amazon Web Services'), ('azure', 'Microsoft Azure'), ('gcp', 'Google Cloud Platform'), ('oci', 'Oracle Cloud Infrastructure')], default='aws', max_length=20)),
                ('environment', models.CharField(choices=[('dev', 'Development'), ('stage', 'Staging'), ('prod', 'Production')], max_length=20)),
                ('cloud_username', models.CharField(max_length=255)),
                ('status', models.CharField(default='active', max_length=20)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('access_level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pam.cloudaccountaccesstype')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pam.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='PasswordRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='active', max_length=20)),
                ('requested_window', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('window_start', models.DateTimeField()),
                ('is_withdraw', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('iam_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pam.cloudaccountaccesstype')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='password_requests', to=settings.AUTH_USER_MODEL)),
                ('validator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='requests_validated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['status'], name='pam_passwor_status_481616_idx'), models.Index(fields=['iam_account'], name='pam_passwor_iam_acc_bc9488_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='passwordrequest',
            constraint=models.CheckConstraint(check=models.Q(('requested_window__range', (1, 4))), name='valid_request_window'),
        ),
        migrations.AddIndex(
            model_name='cloudaccount',
            index=models.Index(fields=['tenant', 'account', 'provider', 'cloud_username'], name='pam_cloudac_tenant__75afc1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cloudaccount',
            unique_together={('account', 'provider', 'cloud_username')},
        ),
    ]
